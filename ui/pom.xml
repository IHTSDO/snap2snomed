<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright Â© 2022 SNOMED International
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.snomed.snap2snomed</groupId>
    <artifactId>snapagogo</artifactId>
    <version>1.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>ui</artifactId>
  <version>0.1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>snapagogo ui</name>

  <properties>
    <prodEnvFile>env.prod</prodEnvFile>
    <testEnvFile>env.test</testEnvFile>
  </properties>

  <build>
    <resources>
      <resource>
        <directory>${project.build.directory}</directory>
        <includes>
          <include>**site/*</include>
        </includes>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.12.1</version>
        <configuration>
          <workingDirectory>./snapclient</workingDirectory>
          <nodeVersion>v14.16.1</nodeVersion>
          <yarnVersion>v1.22.10</yarnVersion>
        </configuration>
        <executions>
          <execution>
            <id>install node and yarn before clean</id>
            <phase>pre-clean</phase>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
          </execution>
          <execution>
            <id>install node and yarn</id>
            <phase>initialize</phase>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
          </execution>
          <execution>
            <id>yarn install</id>
            <phase>initialize</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn build</id>
            <phase>process-sources</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run build --prod</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn clean</id>
            <phase>clean</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>run clean</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn test</id>
            <phase>test</phase>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <skip>${skipUITests}</skip>
              <arguments>run test-headless</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/site</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/snapclient/dist/snapclient</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>envforbuild</id>
            <phase>initialize</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="Copy test .env file from ${prodEnvFile} to ${project.basedir}/snapclient/.env"/>
                <copy file="${prodEnvFile}" tofile="${project.basedir}/snapclient/.env" failonerror="false" overwrite="true"/>
              </target>
            </configuration>
          </execution>
          <execution>
            <id>envfortest</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="Copy test .env file from ${testEnvFile} to ${project.basedir}/snapclient/.env"/>
                <copy file="${testEnvFile}" tofile="${project.basedir}/snapclient/.env" failonerror="false" overwrite="true"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
